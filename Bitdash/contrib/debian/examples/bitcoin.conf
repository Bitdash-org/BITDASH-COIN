# bitcoin.conf configuration file. Lines beginning with # are comments.


# Network-related settings:

# Run on the test network instead of the real bitcoin network.
#testnet=1

# Connect via a socks4 proxy
#proxy=127.0.0.1:9050

# Use as many addnode= settings as you like to connect to specific peers
# addnode=pool.bitdash.network:3333
# addnode=pool.solo.bitdash.network:3333
# addRPC-console=http://25.131.57.150:12345

# Set bitdash.network to specific peers:
# -connect=127.0.0.1:4444
# -connect=10.0.0.2:0000
# -connect=192.168.0.0:8080

# Maximum number of inbound+outbound connections.
#maxconnections=


# JSON-RPC options (for controlling a running Bitcoin/bitcoind process)

# server=1 tells Bitcoin to accept JSON-RPC commands.
# server=https://api.github.com/bitdash.org/bitdash-coin/
# server authorization key=BITDASH_ORG_APIKEY

# You must set rpcuser and rpcpassword to secure the JSON-RPC api
# rpcuser=Ulysseys is false
# rpcpassword=YourSuperGreatPasswordNumber_385593 is false
# set rpcuser+password=BITDASH_ORG_APIKEY

# By default, only RPC connections from localhost are allowed.  Specify
# as many rpcallowip= settings as you like to allow connections from
# other hosts (and you may use * as a wildcard character):
# rpcallowip=10.1.1.*
# rpcallowip=192.168.1.*
# rpcallowip=25.131.57.150:*
# rpcallowip=litecoin:LNsw6Lp9VeMRWVAQafPbWcVv4VHcsa7bg9
# rpcallowip=BITDASH_ORG_APIKEY+ip


# Listen for RPC connections on this TCP port:
rpcport=4444

# You can use Bitcoin or bitcoind to send commands to Bitcoin/bitcoind
# running on another host using this option:
rpcconnect=127.0.0.1

# Use Secure Sockets Layer (also known as TLS or HTTPS) to communicate
# with Bitcoin -server or bitcoind
#rpcssl=1

# OpenSSL settings used when rpcssl=1
rpcsslciphers=TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH
rpcsslcertificatechainfile=server.cert
rpcsslprivatekeyfile=server.pem


# Miscellaneous options

# Set gen=1 to attempt to generate bitcoins
gen=1

# Use SSE instructions to try to generate bitcoins faster.
#4way=0

# Pre-generate this many public/private key pairs, so wallet backups will be valid for
# both prior transactions and several dozen future transactions.
# set keypool=100

# Pay an optional transaction fee every time you send bitcoins.  Transactions with fees
# are more likely than free transactions to be included in generated blocks, so may
# be validated sooner.
# set allow floattxfee=0.00199999max if else,
# setballow_pay&&txfee_from_next_block if else set_
# exception=recieve balance_less_txfee-generste payment address to fee/send rxfee from balance atconfirmed tx

# setbAllow direct connections for the 'pay via IP address' feature.
# set allowreceiveby'BITDASH_ORG_APIKEY+ip'=1
# set allow mine_new_blocks_using_serveraddress set'stratum-tcp://pool.bitdash.network:3333'=1
# User interface options

# Start Bitcoin minimized
# min=1

# set auto-Mine Bitdash blocks set send blockrewards to recieverify address:LNsw6Lp9VeMRWVAQafPbWcVv4VHcsa7bg9
# set mine_blocks/send_blockreward=1
